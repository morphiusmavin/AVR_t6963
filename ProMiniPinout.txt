AtMega328p pinout (Pro Mini Board)
11/06/16

2	data 0
3	data 1
4	data 2
5	data 3
6	data 4
7	data 5
8	data 6
9	data 7
10	LCD_RD	SS	-- these are used by the programmer but if programmer is not plugged in
11	MOSI		-- they can be used by the application
12	MISO		--
13	SCK			--
A0	LCD_WR
A1	LCD_CE
A2	LCD_RST
A3	LCD_CD
A4	
A5
A6
A7
DTR
TXD
RXD
MIS		-		goes to MISO on buspirate	(same as pin 11)
MOS		-		goes to MOSI on buspirate	(same as pin 12)
SCK		-		goes to CLK  "		"		(same as pin 13)
VCC		-		goes to VCC	 "		"
GND		-		goes to GND	 "		"
RESET	-		goes to CS   "      "
RAW		-		+5v input

pinout for actual chip
1	PD3		(PCINT19/OC2B/INT1)
2	PD4		(PCINT20/XCK/TO)
3	GND
4	VCC
5	GND
6	VCC
7	PB6		(PCINT6/XTAL1/TOSC1)
8	PB7		(PCINT7/XTAL2/TOSC2)
9	PD5		(PCINT21/OC0B/TI)
10	PD6		(PCINT22/OC0A/AIN0)
11	PD7		(PCINT23/AIN1)
12	PB0		(PCINT0/CLK0/ICP1)
13	PB1		(PCINT1/OC1A)
14	PB2		(PCINT2/SS/OC1B)
15	PB3		(PCINT3/OC2A/MOSI)
16	PB4		(PCINT4/MISO)
17	PB5		(SCK/PCINT5)
18	AVCC
19	ADC6
20	AREF
21	GND
22	ADC7
23	PC0		(ADC0/PCINT8)
24	PC1		(ADC1/PCINT9)
25	PC2		(ADC2/PCINT10)
26	PC3		(ADC3/PCINT11)
27	PC4		(ADC4/SDA/PCINT12)
28	PC5		(ADC5/SCL/PCINT13)
29	PC6		(RESET/PCINT14)
30	PD0		(RXD/PCINT16)
31	PD1		(TXD/PCINT17)
32	PD2		(INT0/PCINT18)

port B
12	PB0		(PCINT0/CLK0/ICP1)
13	PB1		(PCINT1/OC1A)
14	PB2		(PCINT2/SS/OC1B)
15	PB3		(PCINT3/OC2A/MOSI)
16	PB4		(PCINT4/MISO)
17	PB5		(SCK/PCINT5)
7	PB6		(PCINT6/XTAL1/TOSC1)
8	PB7		(PCINT7/XTAL2/TOSC2)

port C
23	PC0		(ADC0/PCINT8)
24	PC1		(ADC1/PCINT9)
25	PC2		(ADC2/PCINT10)
26	PC3		(ADC3/PCINT11)
27	PC4		(ADC4/SDA/PCINT12)
28	PC5		(ADC5/SCL/PCINT13)
29	PC6		(RESET/PCINT14)

port D
30	PD0		(RXD/PCINT16)
31	PD1		(TXD/PCINT17)
32	PD2		(INT0/PCINT18)
1	PD3		(PCINT19/OC2B/INT1)
2	PD4		(PCINT20/XCK/TO)
9	PD5		(PCINT21/OC0B/TI)
10	PD6		(PCINT22/OC0A/AIN0)
11	PD7		(PCINT23/AIN1)

BusPirate pinout
(ribbon cable colors - starting from right when looking at top of board with ICD connection towards you)
light brown		GND
red				3v3
orange			+5v
yellow			ADC0
green			VPU
blue			AUX
purple			CLK
grey			MOSI
white			CS
black			MISO

currently the fuses are:
lfuse: FF
7	CLDIV8		Divide clock by 8
6	CLKOUT		Clock Output
5	SUT1		Select start-up time
4	SUT0		Select start-up time
3	CKSEL3		Select Clock source
2	CKSEL2		Select Clock source
1	CKSEL1		Select Clock source
0	CKSEL0		Select Clock source

hfuse: DA	
7	RSTDISBL	External Reset Disable
6	DWEN		debugWIRE Enable
5	SPIEN		Enable Serial Prog & Data Downloading	(enabled)
4	WDTON		Watchdog Timer Always On
3	EESAVE		EEPROM memory is perserved threw chip erase
2	BOOTSZ1		Select Boot Size	(enabled)
1	BOOTSZ0		Select Boot Size
0	BOOTRST		Select Reset Vector		(enabled)

efuse: FD	BODLEVEL1 = 0 

-U memtype:op:filename[:format]

    Perform a memory operation. Multiple ‘-U’ options can be specified in order to operate on multiple memories on the same command-line invocation. The memtype field specifies the memory type to operate on. Use the ‘-v’ option on the command line or the part command from terminal mode to display all the memory types supported by a particular device. Typically, a device’s memory configuration at least contains the memory types flash and eeprom. All memory types currently known are:

    calibration

        One or more bytes of RC oscillator calibration data. 
    eeprom

        The EEPROM of the device. 
    efuse

        The extended fuse byte. 
    flash

        The flash ROM of the device. 
    fuse

        The fuse byte in devices that have only a single fuse byte. 
    hfuse

        The high fuse byte. 
    lfuse

        The low fuse byte. 
    lock

        The lock byte. 
    signature

        The three device signature bytes (device ID). 
    fuseN

        The fuse bytes of ATxmega devices, N is an integer number for each fuse supported by the device. 
    application

        The application flash area of ATxmega devices. 
    apptable

        The application table flash area of ATxmega devices. 
    boot

        The boot flash area of ATxmega devices. 
    prodsig

        The production signature (calibration) area of ATxmega devices. 
    usersig

        The user signature area of ATxmega devices. 

    The op field specifies what operation to perform:

    r

        read the specified device memory and write to the specified file
    w

        read the specified file and write it to the specified device memory
    v

        read the specified device memory and the specified file and perform a verify operation

    The filename field indicates the name of the file to read or write. The format field is optional and contains the format of the file to read or write. Possible values are:

    i

        Intel Hex
    s

        Motorola S-record
    r

        raw binary; little-endian byte order, in the case of the flash ROM data
    e

        ELF (Executable and Linkable Format), the final output file from the linker; currently only accepted as an input file
    m

        immediate mode; actual byte values specified on the command line, separated by commas or spaces in place of the filename field of the ‘-U’ option. This is useful for programming fuse bytes without having to create a single-byte file or enter terminal mode. If the number specified begins with 0x, it is treated as a hex value. If the number otherwise begins with a leading zero (0) it is treated as octal. Otherwise, the value is treated as decimal.
    a

        auto detect; valid for input only, and only if the input is not provided at stdin.
    d

        decimal; this and the following formats are only valid on output. They generate one line of output for the respective memory section, forming a comma-separated list of the values. This can be particularly useful for subsequent processing, like for fuse bit settings.
    h

        hexadecimal; each value will get the string 0x prepended.
    o

        octal; each value will get a 0 prepended unless it is less than 8 in which case it gets no prefix.
    b

        binary; each value will get the string 0b prepended.

    The default is to use auto detection for input files, and raw binary format for output files.

    Note that if filename contains a colon, the format field is no longer optional since the filename part following the colon would otherwise be misinterpreted as format.

    When reading any kind of flash memory area (including the various sub-areas in Xmega devices), the resulting output file will be truncated to not contain trailing 0xFF bytes which indicate unprogrammed (erased) memory. Thus, if the entire memory is unprogrammed, this will result in an output file that has no contents at all.

    As an abbreviation, the form -U filename is equivalent to specifying -U flash:w:filename:a. This will only work if filename does not have a colon in it.
